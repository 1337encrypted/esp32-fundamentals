[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/shady/Desktop/esp32-fundamentals/pushbutton/build/bootloader/esp-idf/esptool_py && /Users/shady/.espressif/python_env/idf5.2_py3.10_env/bin/python /Users/shady/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/shady/Desktop/esp32-fundamentals/pushbutton/build/bootloader/bootloader.bin
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable main.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/shady/Desktop/esp32-fundamentals/pushbutton/build/main.bin
[9/10] cd /Users/shady/Desktop/esp32-fundamentals/pushbutton/build/esp-idf/esptool_py && /Users/shady/.espressif/python_env/idf5.2_py3.10_env/bin/python /Users/shady/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/shady/Desktop/esp32-fundamentals/pushbutton/build/partition_table/partition-table.bin /Users/shady/Desktop/esp32-fundamentals/pushbutton/build/main.bin
main.bin binary size 0x2d890 bytes. Smallest app partition is 0x100000 bytes. 0xd2770 bytes (82%) free.
[9/10] cd /Users/shady/esp/esp-idf/components/esptool_py && /opt/homebrew/Cellar/cmake/3.28.3/bin/cmake -D IDF_PATH=/Users/shady/esp/esp-idf -D "SERIAL_TOOL=/Users/shady/.espressif/python_env/idf5.2_py3.10_env/bin/python;;/Users/shady/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/shady/Desktop/esp32-fundamentals/pushbutton/build -P /Users/shady/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/cu.usbserial-0001 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/cu.usbserial-0001
Connecting............
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
WARNING: Detected crystal freq 41.01MHz is quite different to normalized freq 40MHz. Unsupported crystal in use?
Crystal is 40MHz
MAC: e4:65:b8:1a:f6:14
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003dfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26720 bytes to 16363...
Writing at 0x00001000... (100 %)
Wrote 26720 bytes (16363 compressed) at 0x00001000 in 0.7 seconds (effective 308.5 kbit/s)...
Hash of data verified.
Compressed 186512 bytes to 99174...
Writing at 0x00010000... (14 %)
Writing at 0x0001ca20... (28 %)
Writing at 0x0002247c... (42 %)
Writing at 0x000280fa... (57 %)
Writing at 0x0002f8ef... (71 %)
Writing at 0x00036b47... (85 %)
Writing at 0x0003d36c... (100 %)
Wrote 186512 bytes (99174 compressed) at 0x00010000 in 2.9 seconds (effective 515.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 219.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
