[1/13] Linking C static library esp-idf/mqtt/libmqtt.a
[2/13] Linking C static library esp-idf/spiffs/libspiffs.a
[3/13] Performing build step for 'bootloader'
[1/1] cd /Users/shady/Desktop/esp32-fundamentals/uart_echo/build/bootloader/esp-idf/esptool_py && /Users/shady/.espressif/python_env/idf5.2_py3.10_env/bin/python /Users/shady/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/shady/Desktop/esp32-fundamentals/uart_echo/build/bootloader/bootloader.bin
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[4/13] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[5/13] No install step for 'bootloader'
[6/13] Completed 'bootloader'
[7/13] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/uart.cpp.obj
[8/13] Linking C static library esp-idf/main/libmain.a
[9/13] Generating ld/sections.ld
[10/13] Building C object CMakeFiles/uart_echo.elf.dir/project_elf_src_esp32.c.obj
[11/13] Linking CXX executable uart_echo.elf
[12/13] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/shady/Desktop/esp32-fundamentals/uart_echo/build/uart_echo.bin
[13/13] cd /Users/shady/Desktop/esp32-fundamentals/uart_echo/build/esp-idf/esptool_py && /Users/shady/.espressif/python_env/idf5.2_py3.10_env/bin/python /Users/shady/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/shady/Desktop/esp32-fundamentals/uart_echo/build/partition_table/partition-table.bin /Users/shady/Desktop/esp32-fundamentals/uart_echo/build/uart_echo.bin
uart_echo.bin binary size 0x30dc0 bytes. Smallest app partition is 0x100000 bytes. 0xcf240 bytes (81%) free.
